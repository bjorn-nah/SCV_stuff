require 'scv'
location(0x8000, 0x8FFF)
section{"rom", org=0x8000}
    dc.b 'H'	
@main
    di
	lxi sp,0xFFD2		-- initialize Stack pointer
    ei
    calt 0x8C			-- clear text area
	
	lxi hl,vdc_data		-- load VDC data
    lxi de,0x3400
    mvi c,0x03 
    block
	

-- initialize variables
	mvi a,0x00
	mov (0xFF90), a
	mov (0xFF91), a
	
	mvi c,0x44
	--mvi c,0x00
	mvi b,0x00
	mvi a,0x00
	mvi d,0x30
@loadChr
	mov (0xFF9F),c
	mov e,(0xFF9F)
	stax (de)
	inr b
	inr c
	inr a
	eqi b,0x16
	jmp noLine
	mvi b,0x00
	inr c
	inr c
	inr c
	inr c
	inr c
	inr c
	inr c
	inr c
	inr c
	inr c

@noLine
	
	eqi a,0x80	-- after 0x80, the charset seem to loop
	jmp loadChr
	

@loop_1
	
	--increment method
	mov a,(0xFF91)
	mvi e,0x01
	add a,e
	mov (0xFF91),a
	
	mov d,a
	
	eqi d,0x00
	jmp dontadd
	clc
	mov a,(0xFF90)
	mvi e,0x01
	adc a,e
	mov (0xFF90),a
	clc
@dontadd
	
	call WVBLANK
	jmp loop_1

section{"WVBLANK", org=0x8200}
	skit f2            -- wait until acknowledged
	jr  WVBLANK
	ret
	
section{"vdc_data", org=0x8300}
	dc.b 0xD0,0x00,0x00,0xF8

	
writebin(filename .. '.bin')